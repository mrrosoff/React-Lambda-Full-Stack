service: quaesta
frameworkVersion: "3"
useDotenv: true

plugins:
  - serverless-dotenv-plugin
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline-sns
  - serverless-offline-sqs
  - serverless-offline
  - serverless-prune-plugin

custom:
  stage: ${opt:stage, self:provider.stage}
  serverlessPluginTypescript:
    tsConfigFileLocation: "./tsconfig.json"
  dynamodb:
    stages:
      - ${opt:stage, self:provider.stage}
    start:
      port: 8080
      migrate: true
  serverless-offline:
    httpPort: 8000
    websocketPort: 8001
    lambdaPort: 8002
    useWorkerThreads: true
  serverless-offline-sns:
    port: 4001

provider:
  name: aws
  stage: prod
  runtime: nodejs14.x
  region: us-west-2

functions:
  graphql:
    handler: lambda/index.graphql
    events:
      - http:
          path: /graphql
          method: post
          cors: true

package:
  patterns:
    - schema.graphql

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: quaesta-users
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: username
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: username
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        GlobalSecondaryIndexes:
          - IndexName: email
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 10
              WriteCapacityUnits: 10
          - IndexName: username
            KeySchema:
              - AttributeName: username
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 10
              WriteCapacityUnits: 10
